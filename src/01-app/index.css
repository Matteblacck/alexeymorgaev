@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');
 html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}

article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}


/**
  Нормализация блочной модели
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }
 
 /**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 }
 
 /**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
 p {
   --paragraphMarginBottom: 24px;
 
   margin-block: 0;
 }
 
 /**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }
 
 
 /**
   Упрощаем работу с изображениями и видео
  */
 img,
 video {
   display: block;
   max-width: 100%;
   height: auto;
 }
 
 /**
   Наследуем свойства шрифт для полей ввода
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   height: 100%;
   /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
   scrollbar-gutter: stable;
 }
 
 /**
   Плавный скролл
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   min-height: 100%;
   /**
     Унифицированный интерлиньяж
    */
   line-height: 1.5;
 }
 
 /**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
 a:where([class]) {
   display: inline-flex;
 }
 
 /**
   Курсор-рука при наведении на элемент
  */
 button,
 label {
   cursor: pointer;
 }
 
 /**
   Приводим к единому цвету svg-элементы
  */
 [fill] { fill: currentColor }
 [stroke] { stroke: currentColor }
 
 /**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 svg * {
   transition-property: fill, stroke;
 }
 
 /**
   Приведение рамок таблиц в классический 'collapse' вид
  */
 :where(table) {
   border-collapse: collapse;
   border-color: currentColor;
 }
 
 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }
/* -------------------- */
:root {
  --background:black;
  --text: #ffff;
  --button-bg: black;
  --button-text: white;
  --highlited-text: #d7ff35;
}

[data-theme="light"] {
  --background: #ffffff ;
  --text: black;
  --button-bg: #ffffff;
  --button-text: #181818;
  --highlited-text: #d7ff35;
}
/* src/fonts/fonts.css */

@font-face {
  font-family: 'Neue Montreal';
  src: url('../assets/transfonter.org-20250321-122653/Aa NeueMontreal-Bold.woff2') format('woff2');
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'Neue Montreal';
  src: url('../assets/transfonter.org-20250321-122653/Aa NeueMontreal-BoldItalic.woff2') format('woff2');
  font-weight: bold;
  font-style: italic;
}

@font-face {
  font-family: 'Neue Montreal';
  src: url('../assets/transfonter.org-20250321-122653/Aa NeueMontreal-Italic.woff2') format('woff2');
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: 'Neue Montreal';
  src: url('../assets/transfonter.org-20250321-122653/NeueMontreal-Light.woff2') format('woff2');
  font-weight: 300; /* Light */
  font-style: normal;
}

@font-face {
  font-family: 'Neue Montreal';
  src: url('../assets/transfonter.org-20250321-122653/NeueMontreal-LightItalic.woff2') format('woff2');
  font-weight: 300; /* Light */
  font-style: italic;
}

@font-face {
  font-family: 'Neue Montreal';
  src: url('../assets/transfonter.org-20250321-122653/NeueMontreal-Medium.woff2') format('woff2');
  font-weight: 500; /* Medium */
  font-style: normal;
}

@font-face {
  font-family: 'Neue Montreal';
  src: url('../assets/transfonter.org-20250321-122653/NeueMontreal-MediumItalic.woff2') format('woff2');
  font-weight: 500; /* Medium */
  font-style: italic;
}

@font-face {
  font-family: 'Neue Montreal';
  src: url('../assets/transfonter.org-20250321-122653/NeueMontreal-Regular.woff2') format('woff2');
  font-weight: normal;
  font-style: normal;
}

/* Общий стиль скроллбара */
::-webkit-scrollbar {
  width: 1px; /* ширина вертикального скроллбара */
  background-color: transparent;
}

/* Ползунок (бегунок) */
::-webkit-scrollbar-thumb {
  border-radius: 50px;
}

/* Фон скроллбара */
::-webkit-scrollbar-track {
  background-color: black;
}

/* При наведении на ползунок */
::-webkit-scrollbar-thumb:hover {
  background: #555;
}
/* Стиль по умолчанию (элементы скрыты) */
.hidden {
  opacity: 0;
  transition: opacity 1s ease-out, transform 1s ease-out;
}
/* Стиль, когда элемент становится видимым */
.visible {
  opacity: 0.3;
}


.hidden1 {
  opacity: 0;
  transform: translateX(50px); /* Немного смещаем элементы вниз */
  transition: color 1s ease-out, opacity 1s ease-out, transform 1s ease-out;
  color: var(--highlited-text);
}
/* Стиль, когда элемент становится видимым */
.visible1 {
  color:var(--text);

  opacity: 1;
  transform: translateX(0);
}


.hidden2 {
  opacity: 0;
  transform: translateX(-50px); /* Немного смещаем элементы вниз */
  transition: color 1s ease-out, opacity 1s ease-out, transform 1s ease-out;
  color: var(--highlited-text);
}

/* Стиль, когда элемент становится видимым */
.visible2 {
  color:var(--text);
  opacity: 1;
  transform: translateX(0);
}


.hiddenImage {
  overflow: hidden;
  transition: opacity 0.5s ease-in-out;
  opacity: 0;
}

.visibleImage {
  opacity: 1;
  animation: unfold 0.7s ease-in-out forwards;
  transition: transform 0.3s ease, filter 0.3s ease; /* Плавные переходы для масштабирования и фильтров */
}

.visibleImage:hover {
  transform: scale(1.1); /* Увеличиваем при наведении */
  filter: grayscale(100%) brightness(0.8); /* Применяем фильтр */
}

@keyframes unfold {
  0% {
    transform: translateY(100%) scaleY(0); /* Начинаем с полностью скрытого снизу */
    transform-origin: bottom; /* Устанавливаем точку отсчета трансформации снизу */
  }
  100% {
    transform: translateY(0) scaleY(1); /* Перемещаем в нормальное положение */
  }
}
.hiddenImage2 {
  overflow: hidden;
  transition: opacity 0.5s ease-in-out;
  opacity: 0;
}

.visibleImage2 {
  opacity: 1;
  animation: unfold2 0.7s ease-in-out forwards;

}


@keyframes unfold2 {
  0% {
    transform: translateY(100%) scaleY(0); /* Начинаем с полностью скрытого снизу */
    transform-origin: bottom; /* Устанавливаем точку отсчета трансформации снизу */
  }
  100% {
    transform: translateY(0) scaleY(1); /* Перемещаем в нормальное положение */
  }
}
html, body {
  background-color: var(--background);
  color: var(--text);
  font-family: 'Neue Montreal', sans-serif;
  font-weight: regular;
  overscroll-behavior: none;
  position: relative;
  background: 
    linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),  
    url(../assets/creation_of_adam.jpg);
  background-size: cover;
  background-position: 15%; 
  background-repeat: no-repeat;
  background-attachment: fixed;
  transition: background 0.5s ease-in-out, opacity 0.5s ease-in-out;
  overflow-x: hidden;
  overflow-y: auto;
  width: 100%;
  max-width: 100%;
  margin: 0;
  padding: 0;
}

@media (max-width: 964px) {
  html, body {
    background-position: 25%; /* Устанавливаем позицию фона на 25% */
  }
}
@media (max-width: 700px) {
  html, body {
    background-position: 30%; /* Устанавливаем позицию фона на 25% */
  }
}
@media (max-width: 600px) {
  html, body {
    background-position: 34%; /* Устанавливаем позицию фона на 25% */
  }
}

@media (max-width: 480px) {
  html, body {
    background: var(--background);
    background-color: var(--background);
  }
}